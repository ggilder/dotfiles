#!/usr/bin/env ruby

airport_cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport'
info = `#{airport_cmd} -I`.chomp
scan = `#{airport_cmd} -s`.chomp

info.match(/ SSID: (.+)/)
current_network_name = $1

AirportNetwork = Struct.new(:name, :bssid, :rssi, :raw_channel, :ht, :cc, :security) do
  def channel
    chan = raw_channel.split(',').first.to_i
    (1..11).include?(chan) ? chan : nil
  end
end
networks = scan.split("\n").map(&:strip).map { |l| l.split(' ', 7) }
networks = networks.map { |a| AirportNetwork.new(*a) }
current_network_entries = networks.find_all { |n| n.name == current_network_name }
networks.reject! { |n| [current_network_name, 'SSID'].include? n.name }

channels = networks.map(&:channel).compact
channels_used = Hash.new { |h,k| h[k] = 0 }
channels.each { |c| channels_used[c] += 1 }

clarity = {}
(1..11).each do |c|
  clarity[c] = channels_used[c] +
    (0.5 * channels_used[c - 1]) +
    (0.5 * channels_used[c + 1])
end

best = clarity.values.min

best_channels = clarity.select { |k,v| v == best }.keys

puts "Best channels: #{best_channels.join(', ')}"
puts "Current channel: #{current_network_entries.map(&:channel).compact.first}"

